{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/users';\n  }\n  register(user) {\n    return this.http.post(`${this.apiUrl}/register`, user);\n  }\n  login(user) {\n    return this.http.post(`${this.apiUrl}/login`, user);\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AuthService","constructor","http","apiUrl","register","user","post","login","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Amine Issaoui\\Desktop\\movies\\movie-watchlist\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../models/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private apiUrl = 'http://localhost:8080/users';\n\n  constructor(private http: HttpClient) { }\n\n  register(user: User): Observable<User> {\n    return this.http.post<User>(`${this.apiUrl}/register`, user);\n  }\n\n  login(user: User): Observable<any> {\n    return this.http.post<any>(`${this.apiUrl}/login`, user);\n  }\n}"],"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,6BAA6B;EAEN;EAExCC,QAAQA,CAACC,IAAU;IACjB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAO,GAAG,IAAI,CAACH,MAAM,WAAW,EAAEE,IAAI,CAAC;EAC9D;EAEAE,KAAKA,CAACF,IAAU;IACd,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAM,GAAG,IAAI,CAACH,MAAM,QAAQ,EAAEE,IAAI,CAAC;EAC1D;;;uBAXWL,WAAW,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXX,WAAW;MAAAY,OAAA,EAAXZ,WAAW,CAAAa,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}