{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MovieService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/movies';\n  }\n  getMovies() {\n    return this.http.get(this.apiUrl);\n  }\n  getMovie(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  addMovie(movie) {\n    return this.http.post(this.apiUrl, movie);\n  }\n  updateMovie(id, movie) {\n    return this.http.put(`${this.apiUrl}/${id}`, movie);\n  }\n  deleteMovie(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function MovieService_Factory(t) {\n      return new (t || MovieService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: MovieService,\n      factory: MovieService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["MovieService","constructor","http","apiUrl","getMovies","get","getMovie","id","addMovie","movie","post","updateMovie","put","deleteMovie","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Amine Issaoui\\Desktop\\movies\\movie-watchlist\\src\\app\\services\\movie.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Movie } from '../models/movie.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MovieService {\n  private apiUrl = 'http://localhost:8080/movies';\n\n  constructor(private http: HttpClient) { }\n\n  getMovies(): Observable<Movie[]> {\n    return this.http.get<Movie[]>(this.apiUrl);\n  }\n\n  getMovie(id: number): Observable<Movie> {\n    return this.http.get<Movie>(`${this.apiUrl}/${id}`);\n  }\n\n  addMovie(movie: Movie): Observable<Movie> {\n    return this.http.post<Movie>(this.apiUrl, movie);\n  }\n\n  updateMovie(id: number, movie: Movie): Observable<Movie> {\n    return this.http.put<Movie>(`${this.apiUrl}/${id}`, movie);\n  }\n\n  deleteMovie(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\n  }\n}"],"mappings":";;AAQA,OAAM,MAAOA,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,8BAA8B;EAEP;EAExCC,SAASA,CAAA;IACP,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAU,IAAI,CAACF,MAAM,CAAC;EAC5C;EAEAG,QAAQA,CAACC,EAAU;IACjB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAQ,GAAG,IAAI,CAACF,MAAM,IAAII,EAAE,EAAE,CAAC;EACrD;EAEAC,QAAQA,CAACC,KAAY;IACnB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAQ,IAAI,CAACP,MAAM,EAAEM,KAAK,CAAC;EAClD;EAEAE,WAAWA,CAACJ,EAAU,EAAEE,KAAY;IAClC,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAQ,GAAG,IAAI,CAACT,MAAM,IAAII,EAAE,EAAE,EAAEE,KAAK,CAAC;EAC5D;EAEAI,WAAWA,CAACN,EAAU;IACpB,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAO,GAAG,IAAI,CAACX,MAAM,IAAII,EAAE,EAAE,CAAC;EACvD;;;uBAvBWP,YAAY,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAZlB,YAAY;MAAAmB,OAAA,EAAZnB,YAAY,CAAAoB,IAAA;MAAAC,UAAA,EAFX;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}